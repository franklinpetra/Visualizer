{"ast":null,"code":"var _jsxFileName = \"/Users/petrafranklin/Coding_DoJo/mern/Assignments/algo_visualizer/src/AlgoVisualizer/Visualizer.jsx\";\nimport React from 'react';\nimport './Visualizer.css';\nexport default class Visualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 100; i++) {\n      array.push(randomIntFromInterval(20, 650));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, array.map((value, idx) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"array-bar\",\n      key: idx,\n      style: {\n        height: `${value}px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    })), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Create New Array\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.mergeSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Merge Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.quickSort(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"Quick Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Heap Sort\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Bubble Sort\"));\n  }\n\n} //From https:stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-\n\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"sources":["/Users/petrafranklin/Coding_DoJo/mern/Assignments/algo_visualizer/src/AlgoVisualizer/Visualizer.jsx"],"names":["React","Visualizer","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInterval","setState","render","map","value","idx","height","mergeSort","quickSort","min","max","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AAGA,eAAe,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAAyC;AACpDC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL;AACH;;AACDA,EAAAA,UAAU,GAAE;AACR,UAAMF,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAC,GAAlB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBH,MAAAA,KAAK,CAACI,IAAN,CAAYC,qBAAqB,CAAC,EAAD,EAAI,GAAJ,CAAjC;AACH;;AACD,SAAKC,QAAL,CAAc;AAACN,MAAAA;AAAD,KAAd;AACH;;AACDO,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACP,MAAAA;AAAD,QAAU,KAAKD,KAArB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCC,KAAK,CAACQ,GAAN,CAAU,CAACC,KAAD,EAAOC,GAAP,kBACP;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,GAAhC;AACA,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAG,GAAEF,KAAM;AAAlB,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADD,oBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAKa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALb,eAMA;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKP,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANA,eAOA;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKU,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPA,eAQA;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARA,eASA;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKX,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATA,eAUA;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKA,UAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVA,CADJ;AAcH;;AAnCmD,C,CAqCxD;;AACA,SAASG,qBAAT,CAA+BS,GAA/B,EAAoCC,GAApC,EAAyC;AACrC,SAAOC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA9C,CAAP;AACH","sourcesContent":["import React from 'react';\nimport './Visualizer.css';\n\n\nexport default class Visualizer extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n    componentDidMount(){\n        this.resetArray();\n    }\n    resetArray(){\n        const array = [];\n        for (let i = 0; i<100; i++){\n            array.push (randomIntFromInterval(20,650));\n        }\n        this.setState({array});\n    }\n    render(){\n        const {array} = this.state;\n\n        return (\n            <div className=\"array-container\">\n            {array.map((value,idx) => (\n                <div className=\"array-bar\" key={idx}\n                style={{height: `${value}px`}}>\n                </div>\n            ))} <br></br><br></br>\n            <button onClick={() => this.resetArray()} >Create New Array</button> \n            <button onClick={() => this.mergeSort()} >Merge Sort</button> \n            <button onClick={() => this.quickSort()} >Quick Sort</button>  \n            <button onClick={() => this.resetArray()} >Heap Sort</button>  \n            <button onClick={() => this.resetArray()} >Bubble Sort</button>                                                 \n            </div>\n        );\n    }\n}\n//From https:stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-\nfunction randomIntFromInterval(min, max) {\n    return Math.floor (Math.random() * (max - min + 1) + min);\n}"]},"metadata":{},"sourceType":"module"}