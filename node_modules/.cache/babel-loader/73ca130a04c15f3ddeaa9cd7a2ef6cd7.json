{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import Peasy.*;\n// const store = createStore({\n//     todos: {\n//       items: ['Create store', 'Wrap application', 'Use store'],\n//       add: action((state, payload) => {\n//         state.items.push(payload)\n//       })\n//     }\n//   });\n//   function TodoList() {\n//     const todos = useStoreState(state => state.todos.items)\n//     const add = useStoreActions(actions => actions.todos.add)\n//     return (\n//       <div>\n//         {todos.map((todo, idx) => <div key={idx}>{todo}</div>)}\n//         <AddTodo onAdd={add} />\n//       </div>\n// let x = 0.01;\n// let y = 0;\n// let z = 0;\n// let a = 10;\n// let b = 28;\n// let c = 8.0 / 3.0;\n// let points = new Array();\n// function setup() {\n//   createCanvas(800, 600, WEBGL);\n//   colorMode(HSB);\n// }\n// function draw() {\n//   background(0);\n//   let dt = 0.01;\n//   let dx = a * (y - x) * dt;\n//   let dy = (x * (b - z) - y) * dt;\n//   let dz = (x * y - c * z) * dt;\n//   x = x + dx;\n//   y = y + dy;\n//   z = z + dz;\n//   points.push(new p5.Vector(x, y, z));\n//   translate(0, 0, -80);\n//   let camX = map(mouseX, 0, width, -200, 200);\n//   let camY = map(mouseY, 0, height, -200, 200);\n//   camera(camX, camY, height / 2.0 / tan((PI * 30.0) / 180.0), 0, 0, 0, 0, 1, 0);\n//   //translate(width/2, height/2);\n//   scale(5);\n//   stroke(255);\n//   noFill();\n//   let hu = 0;\n//   beginShape();\n//   for (let v of points) {\n//     stroke(hu, 255, 255);\n//     vertex(v.x, v.y, v.z);\n//     //var offset = p5.Vector.random3D();\n//     //offset.mult(0.1);\n//     //v.add(offset);\n//     hu += 1;\n//     if (hu > 255) {\n//       hu = 0;\n//     }\n//   }\n//   endShape();\n//   //println(x,y,z);\n// }\n// import peasy.*;\n// float x = 0.01;\n// float y = 0;\n// float z = 0;\n// float a = 10;\n// float b = 28;\n// float c = 8.0/3.0;\n// ArrayList<PVector> points = new ArrayList<PVector>();\n// PeasyCam cam;\n// void setup() {\n//   size(800, 600, P3D);\n//   colorMode(HSB);\n//   cam = new PeasyCam(this, 500);\n// }\n// void draw() {\n//   background(0);\n//   float dt = 0.01;\n//   float dx = (a * (y - x))*dt;\n//   float dy = (x * (b - z) - y)*dt;\n//   float dz = (x * y - c * z)*dt;\n//   x = x + dx;\n//   y = y + dy;\n//   z = z + dz;\n//   points.add(new PVector(x, y, z));\n//   translate(0, 0, -80);\n//   //translate(width/2, height/2);\n//   scale(5);\n//   stroke(255);\n//   noFill();\n//   float hu = 0;\n//   beginShape();\n//   for (PVector v : points) {\n//     stroke(hu, 255, 255);\n//     vertex(v.x, v.y,v.z);\n//     //PVector offset = PVector.random3D();\n//     //offset.mult(0.1);\n//     //v.add(offset);\n//     hu += 0.1;\n//     if (hu > 255) {\n//       hu = 0;\n//     }\n//   }\n//   endShape();\n//   //println(x,y,z);\n// }\n//     )\n//   }","map":{"version":3,"sources":["/Users/petrafranklin/Coding_DoJo/mern/Assignments/algo_visualizer/src/Algorithms/LorenzAttractor.js"],"names":[],"mappings":"AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA","sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Peasy.*;\n\n\n// const store = createStore({\n//     todos: {\n//       items: ['Create store', 'Wrap application', 'Use store'],\n//       add: action((state, payload) => {\n//         state.items.push(payload)\n//       })\n//     }\n//   });\n\n\n//   function TodoList() {\n//     const todos = useStoreState(state => state.todos.items)\n//     const add = useStoreActions(actions => actions.todos.add)\n//     return (\n//       <div>\n//         {todos.map((todo, idx) => <div key={idx}>{todo}</div>)}\n//         <AddTodo onAdd={add} />\n//       </div>\n \n\n\n\n// let x = 0.01;\n// let y = 0;\n// let z = 0;\n\n// let a = 10;\n// let b = 28;\n// let c = 8.0 / 3.0;\n\n// let points = new Array();\n\n// function setup() {\n//   createCanvas(800, 600, WEBGL);\n//   colorMode(HSB);\n// }\n\n// function draw() {\n//   background(0);\n\n//   let dt = 0.01;\n//   let dx = a * (y - x) * dt;\n//   let dy = (x * (b - z) - y) * dt;\n//   let dz = (x * y - c * z) * dt;\n//   x = x + dx;\n//   y = y + dy;\n//   z = z + dz;\n\n//   points.push(new p5.Vector(x, y, z));\n\n//   translate(0, 0, -80);\n//   let camX = map(mouseX, 0, width, -200, 200);\n//   let camY = map(mouseY, 0, height, -200, 200);\n//   camera(camX, camY, height / 2.0 / tan((PI * 30.0) / 180.0), 0, 0, 0, 0, 1, 0);\n//   //translate(width/2, height/2);\n//   scale(5);\n//   stroke(255);\n//   noFill();\n\n//   let hu = 0;\n//   beginShape();\n\n//   for (let v of points) {\n//     stroke(hu, 255, 255);\n//     vertex(v.x, v.y, v.z);\n//     //var offset = p5.Vector.random3D();\n//     //offset.mult(0.1);\n//     //v.add(offset);\n\n//     hu += 1;\n//     if (hu > 255) {\n//       hu = 0;\n//     }\n//   }\n//   endShape();\n\n//   //println(x,y,z);\n// }\n\n\n// import peasy.*;\n\n// float x = 0.01;\n// float y = 0;\n// float z = 0;\n\n// float a = 10;\n// float b = 28;\n// float c = 8.0/3.0;\n\n// ArrayList<PVector> points = new ArrayList<PVector>();\n\n// PeasyCam cam;\n\n// void setup() {\n//   size(800, 600, P3D);\n//   colorMode(HSB);\n//   cam = new PeasyCam(this, 500);\n// }\n\n// void draw() {\n//   background(0);\n//   float dt = 0.01;\n//   float dx = (a * (y - x))*dt;\n//   float dy = (x * (b - z) - y)*dt;\n//   float dz = (x * y - c * z)*dt;\n//   x = x + dx;\n//   y = y + dy;\n//   z = z + dz;\n\n//   points.add(new PVector(x, y, z));\n\n//   translate(0, 0, -80);\n//   //translate(width/2, height/2);\n//   scale(5);\n//   stroke(255);\n//   noFill();\n\n//   float hu = 0;\n//   beginShape();\n//   for (PVector v : points) {\n//     stroke(hu, 255, 255);\n//     vertex(v.x, v.y,v.z);\n//     //PVector offset = PVector.random3D();\n//     //offset.mult(0.1);\n//     //v.add(offset);\n\n//     hu += 0.1;\n//     if (hu > 255) {\n//       hu = 0;\n//     }\n//   }\n//   endShape();\n\n\n//   //println(x,y,z);\n// }\n\n//     )\n//   }"]},"metadata":{},"sourceType":"module"}