{"ast":null,"code":"export function getBubbleSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\nexport function bubbleSort(array) {\n  const animations = [];\n  let end = arr.length - 1;\n  if (array.length <= 1) return array;\n  const auxiliaryArray = swapped = false;\n\n  for (let i = 0, j = 1; i < end; i++, j++) {\n    if (arr[i] > arr[j]) {\n      swapped = true;\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n  }\n\n  end--;\n}\n\ndo {\n  bubbleSort(unsortedArr);\n} while (swapped);\n\nbubbleSort([64, 25, 12, 22, 11]);","map":{"version":3,"sources":["/Users/petrafranklin/Coding_DoJo/mern/Assignments/algo_visualizer/src/Algorithms/bubbleSort.js"],"names":["getBubbleSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","bubbleSort","end","arr","swapped","i","j","unsortedArr"],"mappings":"AAAA,OAAO,SAASA,uBAAT,CAAiCC,KAAjC,EAAuC;AAC1C,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB,OAAOF,KAAP;AACvB,QAAMG,cAAc,GAAGH,KAAK,CAACI,KAAN,EAAvB;AACAC,EAAAA,eAAe,CAACL,KAAD,EAAQ,CAAR,EAAWA,KAAK,CAACE,MAAN,GAAe,CAA1B,EAA6BC,cAA7B,EAA6CF,UAA7C,CAAf;AACA,SAAOA,UAAP;AAGH;AAQD,OAAO,SAASK,UAAT,CAAoBN,KAApB,EAA2B;AAC9B,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAIM,GAAG,GAAGC,GAAG,CAACN,MAAJ,GAAY,CAAtB;AAEA,MAAKF,KAAK,CAACE,MAAN,IAAgB,CAArB,EAAwB,OAAOF,KAAP;AACxB,QAAMG,cAAc,GAAGM,OAAO,GAAG,KAAjC;;AACI,OAAI,IAAIC,CAAC,GAAC,CAAN,EAASC,CAAC,GAAC,CAAf,EAAkBD,CAAC,GAAGH,GAAtB,EAA2BG,CAAC,IAAIC,CAAC,EAAjC,EAAoC;AAChC,QAAIH,GAAG,CAACE,CAAD,CAAH,GAASF,GAAG,CAACG,CAAD,CAAhB,EAAoB;AACpBF,MAAAA,OAAO,GAAG,IAAV;AACA,OAACD,GAAG,CAACE,CAAD,CAAJ,EAASF,GAAG,CAACG,CAAD,CAAZ,IAAmB,CAACH,GAAG,CAACG,CAAD,CAAJ,EAASH,GAAG,CAACE,CAAD,CAAZ,CAAnB;AACC;AACJ;;AACDH,EAAAA,GAAG;AACN;;AACD,GAAG;AACCD,EAAAA,UAAU,CAACM,WAAD,CAAV;AACH,CAFD,QAGOH,OAHP;;AAKJH,UAAU,CAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAF,CAAV","sourcesContent":["export function getBubbleSortAnimations(array){\n    const animations = [];\n    if (array.length <= 1) return array;\n    const auxiliaryArray = array.slice();\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n    return animations;\n    \n\n}\n\n\n\n\n\n\n\nexport function bubbleSort(array) {\n    const animations = [];\n    let end = arr.length -1;\n    \n    if ( array.length <= 1) return array;\n    const auxiliaryArray = swapped = false;\n        for(let i=0, j=1; i < end; i++, j++){\n            if (arr[i] > arr[j]){\n            swapped = true;\n            [arr[i], arr[j]] = [arr[j], arr[i]];\n            }\n        }\n        end --;\n    }\n    do {\n        bubbleSort(unsortedArr);\n    } \n    while (swapped); \n\nbubbleSort ([64, 25, 12, 22, 11]);"]},"metadata":{},"sourceType":"module"}