{"ast":null,"code":"var _jsxFileName = \"/Users/petrafranklin/Coding_DoJo/mern/Assignments/visualizer/algo_visualizer/src/Components/Registration.js\";\nimport React, { useState } from 'react';\nimport Form from './Form';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst Registration = () => {\n  const [user, setUser] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const changeHandler = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitData = () => {\n    axios.post(\"http://localhost:8000/api/algos/new\", user).then(response => {\n      if (response.data.message === \"Success!\") {\n        setUser({\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\"\n        });\n        navigate(\"/algos/all\");\n      } else {\n        console.log(response.data.results);\n        const { ...currErrors\n        } = errors;\n\n        if (response.data.results.errors.firstName) {\n          currErrors.firstName = response.data.results.errors.firstName.properties.message;\n        } else {\n          currErrors.firstName = \"\";\n        }\n\n        if (response.data.results.errors.lastName) {\n          currErrors.lastName = response.data.results.errors.lastName.properties.message;\n        } else {\n          currErrors.lastName = \"\";\n        }\n\n        if (response.data.results.errors.email) {\n          currErrors.email = response.data.results.errors.email.properties.message;\n        } else {\n          currErrors.email = \"\";\n        }\n\n        if (response.data.results.errors.password) {\n          currErrors.password = response.data.results.errors.password.properties.message;\n        } else {\n          currErrors.password = \"\";\n        }\n\n        setErrors(currErrors);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      border: \"3px solid black\",\n      width: \"85%\",\n      padding: \"0px 0px 0px 0px\",\n      margin: \"0% 2% 0% 2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      textAlign: \"center\",\n      width: \"100%\",\n      padding: \"0px 0px 0px 0px\",\n      backgroundColor: \"#8b572a\",\n      color: \"white\",\n      borderBottom: \"2px solid black\",\n      margin: \"0% 0% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Welcome to Algo Visualizer\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      backgroundColor: \"#f5a623\",\n      width: \"100%\",\n      padding: \"0px 0px 0px 0px\",\n      margin: \"0% 0% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    data: user,\n    changeHandler: changeHandler,\n    errors: errors,\n    setData: setUser,\n    submitData: submitData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Registration;","map":{"version":3,"sources":["/Users/petrafranklin/Coding_DoJo/mern/Assignments/visualizer/algo_visualizer/src/Components/Registration.js"],"names":["React","useState","Form","axios","navigate","Registration","user","setUser","firstName","lastName","email","password","errors","setErrors","confirmPassword","changeHandler","e","target","name","value","submitData","post","then","response","data","message","console","log","results","currErrors","properties","catch","err","textAlign","border","width","padding","margin","backgroundColor","color","borderBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Form from './Form';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nconst Registration = () => {\n    const [user, setUser] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n    });\n    const [errors, setErrors] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    })\n\n    const changeHandler = e => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    }\n    \n    const submitData = () => {\n        axios.post(\"http://localhost:8000/api/algos/new\", user)\n            .then(response => {\n                if(response.data.message === \"Success!\"){\n                    setUser({\n                        firstName: \"\",\n                        lastName: \"\",\n                        email: \"\",\n                        password: \"\"\n                    })\n                    navigate(\"/algos/all\");\n                }\n                else {\n                    console.log(response.data.results);\n                    const {...currErrors} = errors\n                    if(response.data.results.errors.firstName){\n                        currErrors.firstName = response.data.results.errors.firstName.properties.message\n                    } else {\n                        currErrors.firstName = \"\";\n                    }\n                    if(response.data.results.errors.lastName){\n                        currErrors.lastName = response.data.results.errors.lastName.properties.message\n                    } else {\n                        currErrors.lastName = \"\";\n                    }\n                    if(response.data.results.errors.email){\n                        currErrors.email = response.data.results.errors.email.properties.message\n                    } else {\n                        currErrors.email = \"\";\n                    }\n                    if(response.data.results.errors.password){\n                        currErrors.password = response.data.results.errors.password.properties.message\n                    } else {\n                        currErrors.password = \"\";\n                    }\n\n                    setErrors(currErrors);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n    \n    return (\n        \n        <div style={{textAlign:\"center\", border:\"3px solid black\", width:\"85%\", padding:\"0px 0px 0px 0px\", margin:\"0% 2% 0% 2%\"}}>\n            <div className=\"container\" style={{textAlign:\"center\", width:\"100%\", padding:\"0px 0px 0px 0px\", backgroundColor:\"#8b572a\", color:\"white\", borderBottom:\"2px solid black\", margin:\"0% 0% 0% 0%\"}}>\n                <h1>Welcome to Algo Visualizer</h1>\n            </div>\n            <div className=\"container\" style={{backgroundColor:\"#f5a623\", width:\"100%\", padding:\"0px 0px 0px 0px\", margin:\"0% 0% 0% 0%\"}}>         \n                <Form data={ user } changeHandler={ changeHandler } errors={ errors } setData={ setUser } submitData={ submitData }/>\n            </div>\n        </div>\n    )\n}\n\nexport default Registration\n"]},"metadata":{},"sourceType":"module"}