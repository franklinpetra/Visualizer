{"ast":null,"code":"var _jsxFileName = \"/Users/petrafranklin/Coding_DoJo/mern/Assignments/visualizer/algo_visualizer/src/Components/FormAlgo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst FormAlgo = props => {\n  const {\n    action,\n    update\n  } = props;\n  const [newErrors, setNewErrors] = useState([]);\n  const [data, setData] = useState([]);\n  const [algo, setAlgo] = useState([]);\n  const [user, setUser] = useState([]);\n  const [newAlgo, setNewAlgo] = useState({\n    name: \"\",\n    image: \"\",\n    desc: \"\",\n    worst: \"\",\n    best: \"\",\n    aver: \"\",\n    quote: \"\",\n    code: \"\"\n  });\n  const [errors, setErrors] = useState({\n    name: \"\",\n    image: \"\",\n    desc: \"\",\n    worst: \"\",\n    best: \"\",\n    aver: \"\",\n    quote: \"\",\n    code: \"\"\n  });\n  const [hasBeenSubmitted, setHasBeenSubmitted] = useState(false);\n\n  const formMessage = () => {\n    if (hasBeenSubmitted) {\n      return \"Thank you for adding a new algo to the collection!\";\n    } else {\n      return \"\";\n    }\n  };\n\n  useEffect(() => {\n    if (action === \"update\") {\n      axios.put(`http://localhost:8000/api/algos/${props.id}/update`).then(response => {\n        if (response.data.message === \"Success!\") setNewAlgo(response.data.results);else navigate(\"/algos/\");\n      });\n    }\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (validate(newAlgo)) {\n      if (action === \"update\") {\n        axios.put(`http://localhost:8000/api/algos/${props.id}`, newAlgo / update).then(response => {\n          if (response.data.message === \"Success!\") {\n            navigate(\"/algos/\");\n          }\n        }).catch(err => console.log(err));\n      }\n    }\n  };\n\n  const changeHandler = e => {\n    const curAlgo = { ...newAlgo,\n      [e.target.name]: e.target.value\n    };\n    validate(curAlgo);\n    setNewAlgo(curAlgo);\n    setHasBeenSubmitted(true);\n  };\n\n  const validate = user => {\n    let valid = false;\n    const { ...curErrors\n    } = errors;\n\n    if (user.name.length === 0) {\n      curErrors.name = \"The algorithm will need a name. This is a required field.\";\n    } else if (user.name.length < 2) {\n      curErrors.name = \"Algorithm name must be at least 2 characters in length.\";\n    } else {\n      curErrors.name = \"\";\n      valid = true;\n    }\n\n    if (user.image.length === 0) {\n      curErrors.image = \"An image url is required.\";\n    } else {\n      curErrors.image = \"\";\n      valid = true;\n    }\n\n    if (user.desc.length === 0) {\n      curErrors.descs = \"The description is a required field.\";\n    } else {\n      curErrors.descs = \"\";\n      valid = true;\n    }\n\n    if (user.worst.length === 0) {\n      curErrors.worst = \"The worst speed of this algo is a required field.\";\n    } else {\n      curErrors.worst = \"\";\n      valid = true;\n    }\n\n    if (user.best.length === 0) {\n      curErrors.best = \"The best speed is a required field.\";\n    } else {\n      curErrors.best = \"\";\n      valid = true;\n    }\n\n    if (user.aver.length === 0) {\n      curErrors.aver = \"This is a required field.\";\n    } else {\n      curErrors.aver = \"\";\n      valid = true;\n    }\n\n    if (user.quote.length === 0) {\n      curErrors.quote = \"This is a required field.\";\n    } else {\n      curErrors.quote = \"\";\n      valid = true;\n    }\n\n    if (user.code.length === 0) {\n      curErrors.code = \"This is a required field.\";\n    } else {\n      curErrors.code = \"\";\n      valid = true;\n    }\n\n    setErrors(curErrors);\n    return valid;\n  };\n\n  const deleteHandler = () => {\n    axios.delete(`http://localhost:8000/api/algos/${user.id}/${props.id}`).then(response => {\n      if (response.data.message === \"Success!\") {\n        navigate(\"/users/display/all\");\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      border: \"2px solid black\",\n      maxWidth: \"40%\",\n      display: \"inline-block\",\n      margin: \"5% 00% 0% 1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      textAlign: \"center\",\n      width: \"100%\",\n      padding: \"0px 0px 0px 0px\",\n      backgroundColor: \"\",\n      color: \"brown\",\n      margin: \"0% 0% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      margin: \"10% 0% 10% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, errors.name ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-6 text-left text-nowrap text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }, errors.name) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    style: {\n      margin: \"0% 89% 0% 0%\",\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newAlgo.name,\n    placeholder: \"Algorithm Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, errors.image ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-6  text-sm-left text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }, errors.lastName) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"image\",\n    style: {\n      margin: \"0% 86% 0% 0%\",\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, \"Image: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"image\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newAlgo.image,\n    placeholder: \"Link to url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, errors.desc ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-6 text-nowrap text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }, errors.desc) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"desc\",\n    className: \"formGroupExampleInput\",\n    style: {\n      margin: \"0% 80% 0% 0%\",\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, \"Description: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"desc\",\n    className: \"form-control \",\n    onChange: changeHandler,\n    value: newAlgo.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }, errors.worst ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-6 text-left text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, errors.worst) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"worst\",\n    style: {\n      margin: \"0% 41% 0% 0%\",\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, \"Worst Speed Based on O(n) Value: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"worst\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newAlgo.worst,\n    placeholder: \"O(n) value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"best\",\n    style: {\n      margin: \"0% 42% 0% 0%\",\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, \"Best Speed Based on O(n) Value: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"best\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newAlgo.best,\n    placeholder: \"O(n) value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"aver\",\n    style: {\n      margin: \"0% 39% 0% 0%\",\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, \"Average Speed Based on O(n) Value: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"aver\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newAlgo.aver,\n    placeholder: \"O(n) value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"quote\",\n    style: {\n      margin: \"0% 88% 0% 0%\",\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }, \"Quote: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onClick: \"true\",\n    name: \"quote\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newAlgo.quote,\n    placeholder: \"Add a quote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"code\",\n    style: {\n      margin: \"0% 88% 0% 0%\",\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 29\n    }\n  }, \"Code: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onClick: \"true\",\n    name: \"code\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newAlgo.quote,\n    placeholder: \"Javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Update\",\n    action: \"update\",\n    className: \"col-md-6 btn btn-primary\",\n    style: {\n      margin: \"0% 0% 0% 45%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 151\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 29\n    }\n  }, formMessage()))))));\n};\n\nexport default FormAlgo;","map":{"version":3,"sources":["/Users/petrafranklin/Coding_DoJo/mern/Assignments/visualizer/algo_visualizer/src/Components/FormAlgo.js"],"names":["React","useState","useEffect","Link","navigate","axios","FormAlgo","props","action","update","newErrors","setNewErrors","data","setData","algo","setAlgo","user","setUser","newAlgo","setNewAlgo","name","image","desc","worst","best","aver","quote","code","errors","setErrors","hasBeenSubmitted","setHasBeenSubmitted","formMessage","put","id","then","response","message","results","submitHandler","e","preventDefault","validate","catch","err","console","log","changeHandler","curAlgo","target","value","valid","curErrors","length","descs","deleteHandler","delete","border","maxWidth","display","margin","textAlign","width","padding","backgroundColor","color","lastName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst FormAlgo = props => {\n    const { action, update } = props;\n    const [newErrors, setNewErrors] = useState([]);\n    const [data, setData] = useState([]);\n    const [algo, setAlgo] = useState([]);\n    const [user, setUser] = useState([]);\n    const [newAlgo, setNewAlgo] = useState({\n        name: \"\",\n        image: \"\",\n        desc: \"\",\n        worst: \"\",\n        best: \"\",\n        aver: \"\",\n        quote: \"\",\n        code: \"\"\n    });\n\n    const [errors, setErrors] = useState({\n        name: \"\",\n        image: \"\",\n        desc: \"\",\n        worst: \"\",\n        best: \"\",\n        aver: \"\",\n        quote: \"\",\n        code: \"\"\n    })\n\n    \n    const [hasBeenSubmitted, setHasBeenSubmitted] = useState(false);\n\n    const formMessage = () => {\n        if( hasBeenSubmitted ) {\n            return \"Thank you for adding a new algo to the collection!\";\n        } else {\n            return \"\";\n        }\n    };\n\n    useEffect(() => {\n        if(action === \"update\"){\n            axios.put(`http://localhost:8000/api/algos/${props.id}/update`)\n                .then(response => {\n                    if(response.data.message === \"Success!\")\n                        setNewAlgo(response.data.results)\n                    else\n                        navigate(\"/algos/\");\n                })\n        }\n    },[])\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if(validate(newAlgo)){\n            if(action === \"update\"){\n                axios.put(`http://localhost:8000/api/algos/${props.id}`, newAlgo/update)\n                    .then(response => {\n                        if(response.data.message === \"Success!\"){\n                            navigate(\"/algos/\");\n                        }\n                    })\n                    .catch(err => console.log(err));\n            } \n        }\n    }\n\n    const changeHandler = e => {\n        const curAlgo = {\n            ...newAlgo,\n            [e.target.name]: e.target.value\n        }\n        validate(curAlgo);\n        setNewAlgo(curAlgo);\n        setHasBeenSubmitted( true );\n    }\n\n    const validate = user => {\n        let valid = false;\n        const {...curErrors} = errors;\n        if(user.name.length === 0){\n            curErrors.name = \"The algorithm will need a name. This is a required field.\";\n        } else if(user.name.length < 2) {\n            curErrors.name = \"Algorithm name must be at least 2 characters in length.\";\n        } else {\n            curErrors.name = \"\";\n            valid = true;\n        }\n\n        if(user.image.length === 0){\n            curErrors.image = \"An image url is required.\";\n        } else {\n            curErrors.image = \"\";\n            valid = true;\n        }\n\n        if(user.desc.length === 0){\n            curErrors.descs = \"The description is a required field.\";\n        } else {\n            curErrors.descs = \"\";\n            valid = true;\n        }\n\n        if(user.worst.length === 0){\n            curErrors.worst = \"The worst speed of this algo is a required field.\";\n        } else {\n            curErrors.worst = \"\";\n            valid = true;\n        }\n\n        if(user.best.length === 0){\n            curErrors.best = \"The best speed is a required field.\";\n        } else {\n            curErrors.best = \"\";\n            valid = true;\n        }\n        if(user.aver.length === 0){\n            curErrors.aver = \"This is a required field.\";\n        } else {\n            curErrors.aver = \"\";\n            valid = true;\n        }\n\n        if(user.quote.length === 0){\n            curErrors.quote = \"This is a required field.\";\n        } else {\n            curErrors.quote = \"\";\n            valid = true;\n        }\n\n        if(user.code.length === 0){\n            curErrors.code = \"This is a required field.\";\n        } else {\n            curErrors.code = \"\";\n            valid = true;\n        }\n\n\n        setErrors(curErrors);\n\n        return valid;\n    }\n\n    const deleteHandler = () => {\n        axios.delete(`http://localhost:8000/api/algos/${user.id}/${props.id}`)\n            .then(response => {\n                if(response.data.message === \"Success!\"){\n                    navigate(\"/users/display/all\")\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n            {/* Create Algo Form */}\n            <div className=\"container\" style={{border:\"2px solid black\", maxWidth:\"40%\", display:\"inline-block\", margin:\"5% 00% 0% 1%\"}}> \n                <div className=\"container\" style={{textAlign:\"center\", width:\"100%\", padding:\"0px 0px 0px 0px\", backgroundColor:\"\", color:\"brown\", margin:\"0% 0% 0% 0%\"}}>\n                    <h1 style={{margin:\"10% 0% 10% 0%\"}}></h1>\n                </div>\n                <form onSubmit={ submitHandler } >\n                    <div>\n                        <div className=\"form-group col-xs-6\">\n                                {\n                                    errors.name ? \n                                    <p className=\"col-sm-6 text-left text-nowrap text-danger\">{ errors.name }</p>\n                                    :\n                                    ''\n                                }\n                            <label htmlFor=\"name\" style={{margin:\"0% 89% 0% 0%\", color: \"grey\"}}>Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"name\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newAlgo.name }\n                                placeholder=\"Algorithm Name\"\n                            />\n                        </div>\n\n                        <div className=\"form-group col-xs-6\">\n                            {\n                                errors.image ? \n                                <p className=\"col-sm-6  text-sm-left text-danger\">{ errors.lastName }</p>\n                                :\n                                ''\n                            }\n                            <label htmlFor=\"image\" style={{margin:\"0% 86% 0% 0%\", color: \"grey\"}}>Image: </label>\n                            <input \n                                type=\"text\" \n                                name=\"image\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newAlgo.image }\n                                placeholder=\"Link to url\"\n                            />\n                        </div>\n\n                        <div className=\"form-group col-xs-6\">\n                            {\n                                errors.desc ? \n                                <p className=\"col-sm-6 text-nowrap text-danger\">{ errors.desc }</p>\n                                :\n                                ''\n                            }\n                            <label htmlFor=\"desc\" className=\"formGroupExampleInput\" style={{margin:\"0% 80% 0% 0%\", color: \"grey\"}}>Description: </label>\n                            <input \n                                type=\"text\" \n                                name=\"desc\" \n                                className=\"form-control \"\n                                onChange={ changeHandler }\n                                value={ newAlgo.desc }\n                               \n                            />\n                        </div>              \n                    \n                        <div className=\"form-group col-xs-6\">\n                            {\n                                errors.worst ? \n                                <p className=\"col-sm-6 text-left text-danger\">{ errors.worst }</p>\n                                :\n                                ''\n                            }\n                            <label htmlFor=\"worst\" style={{margin:\"0% 41% 0% 0%\", color: \"grey\"}}>Worst Speed Based on O(n) Value: </label>\n                            <input \n                                type=\"text\" \n                                name=\"worst\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newAlgo.worst }\n                                placeholder=\"O(n) value\"\n                            />\n                        </div>\n                \n                        <div className=\"form-group col-xs-6\">\n                            {/* {\n                                errors.best ? \n                                <p className=\"col-sm-8 text-left text-danger\">{ errors.best }</p>\n                                :\n                                ''\n                            } */}\n                            <label className=\"form-check-label\" htmlFor=\"best\" style={{margin:\"0% 42% 0% 0%\", color: \"grey\"}}>Best Speed Based on O(n) Value: </label>\n                            <input \n                                type=\"text\" \n                                name=\"best\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newAlgo.best }\n                                placeholder=\"O(n) value\"\n                            />\n                        </div>\n                        <div className=\"form-group col-xs-6\">\n                            {/* {\n                                errors.aver ? \n                                <p className=\"col-sm-8 text-left text-danger\">{ errors.aver }</p>\n                                :\n                                ''\n                            }  */}\n                            <label className=\"form-check-label\" htmlFor=\"aver\" style={{margin:\"0% 39% 0% 0%\", color: \"grey\"}}>Average Speed Based on O(n) Value: </label>\n                            <input \n                                type=\"text\" \n                                name=\"aver\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newAlgo.aver }\n                                placeholder=\"O(n) value\"\n                            />\n                        </div>\n                        <div className=\"form-group col-xs-6\">\n                            {/* {\n                                errors.quote ? \n                                <p className=\"col-sm-8 text-left text-danger\">{ errors.quote }</p>\n                                :\n                                ''\n                            } */}\n                            <label className=\"form-check-label\" htmlFor=\"quote\"  style={{margin:\"0% 88% 0% 0%\", color: \"grey\"}}>Quote: </label>\n                            <input \n                                type=\"text\" \n                                onClick=\"true\"\n                                name=\"quote\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newAlgo.quote }\n                                placeholder=\"Add a quote\"\n                            />\n                        </div>\n                        <div className=\"form-group col-xs-6\">\n                            {/* {\n                                errors.quote ? \n                                <p className=\"col-sm-8 text-left text-danger\">{ errors.quote }</p>\n                                :\n                                ''\n                            } */}\n                            <label className=\"form-check-label\" htmlFor=\"code\"  style={{margin:\"0% 88% 0% 0%\", color: \"grey\"}}>Code: </label>\n                            <input \n                                type=\"text\" \n                                onClick=\"true\"\n                                name=\"code\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newAlgo.quote }\n                                placeholder=\"Javascript\"\n                            />\n                        </div>\n                        <div className=\"form-group col-xs-6\">\n                            <input type=\"submit\" value=\"Update\" action=\"update\" className=\"col-md-6 btn btn-primary\" style={{margin:\"0% 0% 0% 45%\"}}/><br></br>\n                            <p style={{color:\"grey\"}}>{ formMessage() }</p>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default FormAlgo;\n"]},"metadata":{},"sourceType":"module"}