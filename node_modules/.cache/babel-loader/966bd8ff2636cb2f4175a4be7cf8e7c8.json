{"ast":null,"code":"var _jsxFileName = \"/Users/petrafranklin/Coding_DoJo/mern/Assignments/visualizer/algo_visualizer/src/Components/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst Form = props => {\n  const {\n    action,\n    eReg\n  } = props;\n  const [newErrors, setNewErrors] = useState([]);\n  const [data, setData] = useState([]);\n  const [user, setUser] = useState([]);\n  const [newUser, setNewUser] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [errors, setErrors] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [hasBeenSubmitted, setHasBeenSubmitted] = useState(false);\n\n  const formMessage = () => {\n    if (hasBeenSubmitted) {\n      return \"Thank you for submitting the form!\";\n    } else {\n      return \"\";\n    }\n  };\n\n  useEffect(() => {\n    if (action === \"edit\") {\n      axios.get(`http://localhost:8000/api/algos/${props.id}/update`).then(response => {\n        if (response.data.message === \"Success!\") setNewUser(response.data.results);else navigate(\"/algos/all\");\n      });\n    }\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (validate(newUser)) {\n      if (action === \"edit\") {\n        axios.put(`http://localhost:8000/api/algos/${props.id}`, newUser).then(response => {\n          if (response.data.message === \"Success!\") {\n            navigate(\"/algos/all\");\n          }\n        }).catch(err => console.log(err));\n      } else {\n        axios.post(`http://localhost:8000/api/algos/new`, newUser).then(response => {\n          if (response.data.message === \"Success!\") {\n            navigate(\"/all\");\n          }\n        }).catch(err => console.log(err));\n      }\n    }\n  };\n\n  const changeHandler = e => {\n    const curUser = { ...newUser,\n      [e.target.name]: e.target.value\n    };\n    validate(curUser);\n    setNewUser(curUser);\n    setHasBeenSubmitted(true);\n  };\n\n  const validate = user => {\n    let valid = false;\n    const { ...curErrors\n    } = errors;\n\n    if (user.firstName.length === 0) {\n      curErrors.firstName = \"We'll need a name. This is a required field.\";\n    } else if (user.firstName.length < 2) {\n      curErrors.firstName = \"First name must be at least 2 characters in length.\";\n    } else if (user.firstName.length > 50) {\n      curErrors.firstName = \"Yikes. We are going to have trouble with a 50 character name. How about...we go for a nick name here.\";\n    } else {\n      curErrors.firstName = \"\";\n      valid = true;\n    }\n\n    if (user.lastName.length === 0) {\n      curErrors.lastName = \"This is a required field.\";\n    } else if (user.lastName.length < 3) {\n      curErrors.lastName = \"Last names must have at least 3 characters.\";\n    } else {\n      curErrors.lastName = \"\";\n      valid = true;\n    }\n\n    if (user.email.length === 0) {\n      curErrors.email = \"An email address is a required field.\";\n    } else {\n      curErrors.email = \"\";\n      valid = true;\n    }\n\n    if (user.password.length === 0) {\n      curErrors.password = \"This is a required field.\";\n    } else {\n      curErrors.password = \"\";\n      valid = true;\n    }\n\n    if (user.confirmPassword.length === 0) {\n      curErrors.confirmPassword = \"This is a required field.\";\n    } else if (user.confirmPassword != user.password) {\n      curErrors.confirmPassword = \"Typo perhaps? Your confirm password must match your password.\";\n    } else {\n      curErrors.confirmPassword = \"\";\n      valid = true;\n    }\n\n    setErrors(curErrors);\n    return valid;\n  };\n\n  const deleteHandler = () => {\n    axios.delete(`http://localhost:8000/api/users/${props.id}`).then(response => {\n      if (response.data.message === \"Success!\") {\n        navigate(\"/\");\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      border: \"5px solid black\",\n      backgroundColor: \"white\",\n      maxWidth: \"40%\",\n      display: \"inline-block\",\n      margin: \"5% 50% 0% 1%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, formMessage()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      margin: \"10% 0% 10% 55%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, errors.firstName ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-6 text-left text-nowrap text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, errors.firstName) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    style: {\n      margin: \"0% 80% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, \"First Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newUser.firstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, errors.lastName ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-6  text-sm-left text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, errors.lastName) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    style: {\n      margin: \"0% 80% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, \"Last Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newUser.lastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, errors.email ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-6 text-nowrap text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, errors.email) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    style: {\n      margin: \"0% 90% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 29\n    }\n  }, \"Email: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    className: \"form-control \",\n    onChange: changeHandler,\n    value: newUser.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, errors.password ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-6 text-left text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  }, errors.password) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    style: {\n      margin: \"0% 90% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newUser.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, errors.confirmPassword ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-8 text-left text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, errors.confirmPassword) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"confirmPassword\",\n    style: {\n      margin: \"0% 65% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, \"Confirm Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confirmPassword\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newUser.confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    className: \"col-md-6 btn btn-primary\",\n    style: {\n      margin: \"0% 0% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 31\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      border: \"5px solid black\",\n      backgroundColor: \"white\",\n      maxWidth: \"40%\",\n      margin: \"-500% 1% 20% 50%\",\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, formMessage()), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      margin: \"10% 0% 10% 55%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, errors.email ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-6 text-left text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 33\n    }\n  }, errors.email) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    style: {\n      margin: \"0% 90% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, \"Email: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newUser.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group col-xs-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, errors.password ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"col-sm-6 offset-sm-4 text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, errors.password) : '', /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    style: {\n      margin: \"0% 90% 0% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, \"Password: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"password\",\n    className: \"form-control\",\n    onChange: changeHandler,\n    value: newUser.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"col-sm-3 btn btn-primary\",\n    style: {\n      margin: \"0% 0% 5% 8%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/petrafranklin/Coding_DoJo/mern/Assignments/visualizer/algo_visualizer/src/Components/Form.js"],"names":["React","useState","useEffect","Link","navigate","axios","Form","props","action","eReg","newErrors","setNewErrors","data","setData","user","setUser","newUser","setNewUser","firstName","lastName","email","password","confirmPassword","errors","setErrors","hasBeenSubmitted","setHasBeenSubmitted","formMessage","get","id","then","response","message","results","submitHandler","e","preventDefault","validate","put","catch","err","console","log","post","changeHandler","curUser","target","name","value","valid","curErrors","length","deleteHandler","delete","border","backgroundColor","maxWidth","display","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst Form = props => {\n    const { action, eReg } = props;\n    const [newErrors, setNewErrors] = useState([])\n    const [data, setData] = useState([])\n    const [user, setUser] = useState([])\n    const [newUser, setNewUser] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    });\n\n    const [errors, setErrors] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    })\n    \n    const [hasBeenSubmitted, setHasBeenSubmitted] = useState(false);\n\n    const formMessage = () => {\n        if( hasBeenSubmitted ) {\n            return \"Thank you for submitting the form!\";\n        } else {\n            return \"\";\n        }\n    };\n\n    useEffect(() => {\n        if(action === \"edit\"){\n            axios.get(`http://localhost:8000/api/algos/${props.id}/update`)\n                .then(response => {\n                    if(response.data.message === \"Success!\")\n                        setNewUser(response.data.results)\n                    else\n                        navigate(\"/algos/all\");\n                })\n        }\n    },[])\n\n    const submitHandler = e => {\n        e.preventDefault();\n        if(validate(newUser)){\n            if(action === \"edit\"){\n                axios.put(`http://localhost:8000/api/algos/${props.id}`, newUser)\n                    .then(response => {\n                        if(response.data.message === \"Success!\"){\n                            navigate(\"/algos/all\");\n                        }\n                    })\n                    .catch(err => console.log(err));\n            } else {\n                axios.post(`http://localhost:8000/api/algos/new`, newUser)\n                    .then(response => {\n                        if(response.data.message === \"Success!\"){\n                            navigate(\"/all\");\n                        }\n                    })\n                    .catch(err => console.log(err));\n            }\n        }\n    }\n\n    const changeHandler = e => {\n        const curUser = {\n            ...newUser,\n            [e.target.name]: e.target.value\n        }\n\n        validate(curUser);\n        setNewUser(curUser);\n        setHasBeenSubmitted( true );\n    }\n\n    const validate = user => {\n        let valid = false;\n        const {...curErrors} = errors;\n        if(user.firstName.length === 0){\n            curErrors.firstName = \"We'll need a name. This is a required field.\";\n        } else if(user.firstName.length < 2) {\n            curErrors.firstName = \"First name must be at least 2 characters in length.\";\n        } else if(user.firstName.length > 50){\n            curErrors.firstName = \"Yikes. We are going to have trouble with a 50 character name. How about...we go for a nick name here.\";\n        } else {\n            curErrors.firstName = \"\";\n            valid = true;\n        }\n\n        if(user.lastName.length === 0){\n            curErrors.lastName = \"This is a required field.\";\n        } else if(user.lastName.length < 3) {\n            curErrors.lastName = \"Last names must have at least 3 characters.\";\n        } else {\n            curErrors.lastName = \"\";\n            valid = true;\n        }\n\n        if(user.email.length === 0){\n            curErrors.email = \"An email address is a required field.\";\n        } else {\n            curErrors.email = \"\";\n            valid = true;\n        }\n\n        if(user.password.length === 0){\n            curErrors.password = \"This is a required field.\";\n        } else {\n            curErrors.password = \"\";\n            valid = true;\n        }\n\n        if(user.confirmPassword.length === 0){\n            curErrors.confirmPassword = \"This is a required field.\";\n        } else if(user.confirmPassword != user.password) {\n            curErrors.confirmPassword = \"Typo perhaps? Your confirm password must match your password.\";\n        } else {\n            curErrors.confirmPassword = \"\";\n            valid = true;\n        }\n        setErrors(curErrors);\n\n        return valid;\n    }\n\n    const deleteHandler = () => {\n        axios.delete(`http://localhost:8000/api/users/${props.id}`)\n            .then(response => {\n                if(response.data.message === \"Success!\"){\n                    navigate(\"/\")\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n            {/* Registration Form */}\n      \n            <div className=\"container\" style={{border:\"5px solid black\", backgroundColor:\"white\", maxWidth:\"40%\", display:\"inline-block\", margin:\"5% 50% 0% 1%\"}}>\n                <p>{ formMessage() }</p>\n                <div className=\"col-md-6\"> \n                    <h1 style={{margin:\"10% 0% 10% 55%\"}}>Register</h1>\n                </div>\n                <form onSubmit={ submitHandler } >\n                    <div>\n                        <div className=\"form-group col-xs-6\">\n                                {\n                                    errors.firstName ? \n                                    <p className=\"col-sm-6 text-left text-nowrap text-danger\">{ errors.firstName }</p>\n                                    :\n                                    ''\n                                }\n                            <label htmlFor=\"firstName\" style={{margin:\"0% 80% 0% 0%\"}}>First Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"firstName\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newUser.firstName }\n                            />\n                        </div>\n\n                        <div className=\"form-group col-xs-6\">\n                            {\n                                errors.lastName ? \n                                <p className=\"col-sm-6  text-sm-left text-danger\">{ errors.lastName }</p>\n                                :\n                                ''\n                            }\n                            <label htmlFor=\"lastName\" style={{margin:\"0% 80% 0% 0%\"}}>Last Name: </label>\n                            <input \n                                type=\"text\" \n                                name=\"lastName\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newUser.lastName }\n                            />\n                        </div>\n\n                        <div className=\"form-group col-xs-6\">\n                            {\n                                errors.email ? \n                                <p className=\"col-sm-6 text-nowrap text-danger\">{ errors.email }</p>\n                                :\n                                ''\n                            }\n                            <label htmlFor=\"email\" style={{margin:\"0% 90% 0% 0%\"}}>Email: </label>\n                            <input \n                                type=\"text\" \n                                name=\"email\" \n                                className=\"form-control \"\n                                onChange={ changeHandler }\n                                value={ newUser.email }\n                            />\n                        </div>              \n                    \n                        <div className=\"form-group col-xs-6\">\n                            {\n                                errors.password ? \n                                <p className=\"col-sm-6 text-left text-danger\">{ errors.password }</p>\n                                :\n                                ''\n                            }\n                            <label htmlFor=\"password\" style={{margin:\"0% 90% 0% 0%\"}}>Password: </label>\n                            <input \n                                type=\"password\" \n                                name=\"password\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newUser.password }\n                            />\n                        </div>\n                \n                        <div className=\"form-group col-xs-6\">\n                            {\n                                errors.confirmPassword ? \n                                <p className=\"col-sm-8 text-left text-danger\">{ errors.confirmPassword }</p>\n                                :\n                                ''\n                            }\n                            <label htmlFor=\"confirmPassword\" style={{margin:\"0% 65% 0% 0%\"}}>Confirm Password: </label>\n                            <input \n                                type=\"password\" \n                                name=\"confirmPassword\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newUser.confirmPassword }\n                            />\n                        </div>\n            \n                        <div className=\"form-group col-xs-6\">\n                            \n                            <input type=\"submit\" value=\"Register\" className=\"col-md-6 btn btn-primary\" style={{margin:\"0% 0% 0% 0%\"}}/>\n                        </div><br></br>\n                    </div>\n                </form>\n            </div>\n\n                {/* Login Form */}\n            <div className=\"container\" style={{border:\"5px solid black\", backgroundColor:\"white\", maxWidth:\"40%\",  margin:\"-500% 1% 20% 50%\", display:\"inline-block\"}}>\n                <p>{ formMessage() }</p>\n                <form onSubmit={ submitHandler }>\n                    <div className=\"col-md-6\"> \n                        <h1 style={{margin:\"10% 0% 10% 55%\"}}>Login</h1>\n                    </div>\n                    <div className=\"form-group col-xs-6\">\n                            {\n                                errors.email ? \n                                <p className=\"col-sm-6 text-left text-danger\">{ errors.email }</p>\n                                :\n                                ''\n                            }\n                            <label htmlFor=\"email\" style={{margin:\"0% 90% 0% 0%\"}}>Email: </label>\n                            <input \n                                type=\"text\" \n                                name=\"email\" \n                                className=\"form-control\"\n                                onChange={ changeHandler }\n                                value={ newUser.email }\n                            />\n                    </div>\n                    <div className=\"form-group col-xs-6\">\n                        {\n                            errors.password ? \n                            <p className=\"col-sm-6 offset-sm-4 text-danger\">{ errors.password }</p>\n                            :\n                            ''\n                        }\n                        <label htmlFor=\"password\" style={{margin:\"0% 90% 0% 0%\"}}>Password: </label>\n                        <input \n                            type=\"text\" \n                            name=\"password\" \n                            className=\"form-control\"\n                            onChange={ changeHandler }\n                            value={ newUser.password }\n                            />\n                    </div>\n                    <input type=\"submit\" value=\"Login\" className=\"col-sm-3 btn btn-primary\" style={{margin:\"0% 0% 5% 8%\"}}/>\n                </form>       \n            </div>\n        </div>\n    )\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}