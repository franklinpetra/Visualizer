{"ast":null,"code":"var _jsxFileName = \"/Users/petrafranklin/Coding_DoJo/mern/Assignments/visualizer/algo_visualizer/src/Components/New.js\";\nimport React, { useState, useEffect } from 'react';\nimport FormAlgo from './FormAlgo';\nimport axios from 'axios';\nimport { navigate, Link } from '@reach/router';\n\nconst New = () => {\n  const [user, setUser] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const changeHandler = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitData = () => {\n    axios.post(\"http://localhost:8000/api/users\", user).then(response => {\n      if (response.data.message === \"Success!\") {\n        setUser({\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          password: \"\"\n        });\n        navigate(\"/\");\n      } else {\n        console.log(response.data.results);\n        const { ...currErrors\n        } = errors;\n\n        if (response.data.results.errors.firstName) {\n          currErrors.firstName = response.data.results.errors.firstName.properties.message;\n        } else {\n          currErrors.firstName = \"\";\n        }\n\n        if (response.data.results.errors.lastName) {\n          currErrors.lastName = response.data.results.errors.lastName.properties.message;\n        } else {\n          currErrors.lastName = \"\";\n        }\n\n        if (response.data.results.errors.email) {\n          currErrors.email = response.data.results.errors.email.properties.message;\n        } else {\n          currErrors.email = \"\";\n        }\n\n        if (response.data.results.errors.password) {\n          currErrors.password = response.data.results.errors.password.properties.message;\n        } else {\n          currErrors.password = \"\";\n        }\n\n        setErrors(currErrors);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"2% 0% 1% 0%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"2% 0% 0% 0%\",\n      backgroundColor: \"brown\",\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      margin: \"8% 0% 0% 0%\",\n      color: \"white\",\n      backgroundColor: \"brown\",\n      verticalAlign: \"middle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Add An Algorithm to the Collection\"), /*#__PURE__*/React.createElement(Link, {\n    to: `/algos/`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"col-sm-2 btn btn-success\",\n    style: {\n      margin: \"1% 0% 2% 75%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 48\n    }\n  }, \"Algorithm Collection\")), /*#__PURE__*/React.createElement(FormAlgo, {\n    data: user,\n    changeHandler: changeHandler,\n    errors: errors,\n    setData: setUser,\n    submitData: submitData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default New;","map":{"version":3,"sources":["/Users/petrafranklin/Coding_DoJo/mern/Assignments/visualizer/algo_visualizer/src/Components/New.js"],"names":["React","useState","useEffect","FormAlgo","axios","navigate","Link","New","user","setUser","firstName","lastName","email","password","errors","setErrors","confirmPassword","changeHandler","e","target","name","value","submitData","post","then","response","data","message","console","log","results","currErrors","properties","catch","err","margin","backgroundColor","color","verticalAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FormAlgo from './FormAlgo';\nimport axios from 'axios';\nimport { navigate, Link } from '@reach/router';\n\nconst New = () => {\n    const [user, setUser] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\"\n    });\n    const [errors, setErrors] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    })\n\n    const changeHandler = e => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    }\n\n    const submitData = () => {\n        axios.post(\"http://localhost:8000/api/users\", user)\n            .then(response => {\n                if(response.data.message === \"Success!\"){\n                    setUser({\n                        firstName: \"\",\n                        lastName: \"\",\n                        email: \"\",\n                        password: \"\"\n                    })\n                    navigate(\"/\");\n                }\n                else {\n                    console.log(response.data.results);\n                    const {...currErrors} = errors\n                    if(response.data.results.errors.firstName){\n                        currErrors.firstName = response.data.results.errors.firstName.properties.message\n                    } else {\n                        currErrors.firstName = \"\";\n                    }\n                    if(response.data.results.errors.lastName){\n                        currErrors.lastName = response.data.results.errors.lastName.properties.message\n                    } else {\n                        currErrors.lastName = \"\";\n                    }\n                    if(response.data.results.errors.email){\n                        currErrors.email = response.data.results.errors.email.properties.message\n                    } else {\n                        currErrors.email = \"\";\n                    }\n                    if(response.data.results.errors.password){\n                        currErrors.password = response.data.results.errors.password.properties.message\n                    } else {\n                        currErrors.password = \"\";\n                    }\n\n                    setErrors(currErrors);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n    return (\n        <div>\n            <div>\n                <div style={{ margin:\"2% 0% 1% 0%\"}}>\n                    <div style={{margin:\"2% 0% 0% 0%\", backgroundColor:\"brown\", color:\"white\"}}>\n                        <h1 style={{margin:\"8% 0% 0% 0%\", color: \"white\", backgroundColor:\"brown\", verticalAlign:\"middle\"}}>Add An Algorithm to the Collection</h1>\n                        <Link to={ `/algos/` }><button className=\"col-sm-2 btn btn-success\" style={{margin:\"1% 0% 2% 75%\"}}>Algorithm Collection</button></Link>\n                        <FormAlgo data={ user } changeHandler={ changeHandler } errors={ errors } setData={ setUser } submitData={ submitData }/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}